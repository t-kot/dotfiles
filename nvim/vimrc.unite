" 入力モードで開始する
let g:unite_enable_start_insert=1

function! GetProjectDir() abort " {{{
  if exists('b:vimfiler.current_dir')
    let l:buffer_dir = b:vimfiler.current_dir
  else
    let l:buffer_dir = expand('%:p:h')
  endif

  let l:project_dir = vital#of('vital').import('Prelude').path2project_directory(l:buffer_dir, 1)
  if empty(l:project_dir) && exists('g:project_dir_pattern')
    let l:project_dir = matchstr(l:buffer_dir, g:project_dir_pattern)
  endif

  if empty(l:project_dir)
    return l:buffer_dir
  else
    return l:project_dir
  endif
endfunction " }}}

"インサート/ノーマルどちらからでも呼び出せるようにキーマップ
"let buffer_dir = expand('%:p:h')
nnoremap <silent> <C-f> :<C-u>UniteWithBufferDir -buffer-name=files file file/new<CR>
inoremap <silent> <C-f> <ESC>:<C-u>UniteWithBufferDir -buffer-name=files file file/new<CR>
nnoremap <silent> <C-b> :<C-u>Unite buffer file_mru<CR>
inoremap <silent> <C-b> <ESC>:<C-u>Unite buffer file_mru<CR>

" ウィンドウを分割して開く
au FileType unite nnoremap <silent> <buffer> <expr> <C-j> unite#do_action('split')
au FileType unite inoremap <silent> <buffer> <expr> <C-j> unite#do_action('split')
" ウィンドウを縦に分割して開く
au FileType unite nnoremap <silent> <buffer> <expr> <C-l> unite#do_action('vsplit')
au FileType unite inoremap <silent> <buffer> <expr> <C-l> unite#do_action('vsplit')
" ESCキーを2回押すと終了する
au FileType unite nnoremap <silent> <buffer> <ESC><ESC> q
au FileType unite inoremap <silent> <buffer> <ESC><ESC> <ESC>q
autocmd FileType unite call s:unite_my_settings()
function! s:unite_my_settings()
  imap <buffer> <C-w> <Plug>(unite_delete_backward_path)
endfunction

noremap <Leader>t :noautocmd vimgrep /TODO/j **/*.rb **/*.js **/*.erb **/*.coffee **/*.haml<CR>:cw<CR>